plugins {
    id 'org.springframework.boot' version '2.2.6.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "Hoxton.SR3")
}

dependencies {
    implementation("org.springframework.cloud:spring-cloud-starter-config")
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
    implementation('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
//    compile('org.springframework.boot:spring-boot-starter-webflux')
//    compile('org.projectreactor:reactor-spring:1.0.1.RELEASE')
//    compile("org.springframework.boot:spring-boot-starter-undertow")
    implementation("org.springframework.boot:spring-boot-starter-actuator")

    // override default security-libraries version
    implementation('org.springframework.security.oauth:spring-security-oauth2:2.2.1.RELEASE')
    implementation('org.springframework.security:spring-security-jwt:1.0.9.RELEASE')

    implementation('com.squareup.okhttp3:okhttp:3.9.0')


    implementation("org.apache.commons:commons-collections4:4.1")
    implementation("commons-io:commons-io:2.6")
    implementation("org.apache.commons:commons-lang3:3.7")

//    compile("com.nghia.tut.utils:nghia-libraries:1.0") {
//        exclude module: 'spring-boot-starter-amqp'
//        exclude module: 'spring-boot-starter-tomcat'
//        exclude module: 'spring-boot-starter-data-mongodb'
//        exclude module: 'spring-boot-starter-web'
//    }

    //Zipkin
    implementation('org.springframework.cloud:spring-cloud-starter-sleuth')
    implementation('org.springframework.cloud:spring-cloud-starter-zipkin')

//    testCompile('org.springframework.boot:spring-boot-starter-test')
//    runtime('org.springframework.boot:spring-boot-devtools')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

bootRun {
//    systemProperties = System.properties
    jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS"]
}