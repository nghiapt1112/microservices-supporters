buildscript {
    ext {
//        springBootVersion = '1.5.10.RELEASE'
//        springCloudVersion = 'Edgware.SR2'
        springBootVersion = '2.0.1.RELEASE'
        springCloudVersion = 'Finchley.M9'
    }
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://repo.spring.io/milestone" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

jar {
    baseName = 'edge-server'
    version = '0.0.1'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "https://repo.spring.io/milestone" }
}


dependencies {
//     compile("org.springframework.cloud:spring-cloud-starter-config")
    compile('org.springframework.cloud:spring-cloud-starter-netflix-eureka-client')
//    compile('org.springframework.cloud:spring-cloud-starter-zuul')

    //    compile('com.marcosbarbero.cloud:spring-cloud-zuul-ratelimit:1.6.0.RELEASE')

    compile("org.springframework.boot:spring-boot-starter-undertow")
    compile("org.springframework.boot:spring-boot-starter-actuator")

    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    compile('com.squareup.okhttp3:okhttp:3.9.0')

// 2 cai nay cu
//    compile('org.springframework.cloud:spring-cloud-starter-oauth2')
//    compile('org.springframework.cloud:spring-cloud-starter-security')


    compile('org.springframework.cloud:spring-cloud-starter-netflix-zuul')
    //cai nay moi theo tut bealdung
    compile('org.springframework.security.oauth:spring-security-oauth2:2.2.1.RELEASE')
    compile('org.springframework.security:spring-security-jwt:1.0.9.RELEASE')

    // bealdung spring-security-5
    compile('org.springframework.security:spring-security-core')
    compile('org.springframework.security:spring-security-web')
    compile('org.springframework.security:spring-security-config')



    testCompile('org.springframework.boot:spring-boot-starter-test')
    runtime('org.springframework.boot:spring-boot-devtools')

    compile("com.nghia.tut.utils:nghia-libraries:1.0") {
        exclude module: 'spring-boot-starter-amqp'
        exclude module: 'spring-boot-starter-tomcat'
        exclude module: 'spring-boot-starter-data-mongodb'
        exclude module: 'spring-boot-starter-web'
    }
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


tasks.withType(JavaExec) {
    if (System.getProperty('debug', '0') == '1') {
        jvmArgs '-Xdebug', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5006'
    }
}