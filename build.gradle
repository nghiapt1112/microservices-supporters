buildscript {

    ext {
        springBootVersion = '2.0.5.RELEASE'
        springCloudVersion = 'Finchley.SR1'
    }

    repositories {
        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

//allprojects {}

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    repositories {
        mavenCentral()
        mavenLocal()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(Jar) {
        destinationDir = file("$rootDir/build/")
    }
    version = '1.0'


    tasks.withType(JavaExec) {
        if (System.getProperty('debug', '0') == '1') {
            jvmArgs '-Xdebug', '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005'
        }
    }

    configurations.compile {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
        exclude group: 'org.springframework.boot', module: 'logback-classic'
    }
    dependencies {
        implementation('org.springframework.cloud:spring-cloud-starter')
        implementation("org.springframework.boot:spring-boot-starter-undertow")
        implementation('org.springframework.boot:spring-boot-starter-actuator')

        // LOG4J
        implementation('org.springframework.boot:spring-boot-starter-log4j2')
        implementation('org.springframework.boot:spring-boot-starter-mail')
        implementation('com.lmax:disruptor:3.4.0')

        testCompile('org.springframework.boot:spring-boot-starter-test')
        runtime('org.springframework.boot:spring-boot-devtools')
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }

}

//
//bootRun {
////    systemProperties = System.properties
//    jvmArgs = ["-Dspring.output.ansi.enabled=ALWAYS"]
//}