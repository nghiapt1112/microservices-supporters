server:
  port: 8888
#  ssl:
    #key-store: classpath:server.jks
#    key-store-password: password
    #key-password: password

security.basic.enabled: false


# Configuration of a local Git-repo for development locally without Docker
# note that we are still using git; We just access the git-repo via file: protocol
#spring.cloud.config.server.git.uri: file:///${PWD}/../../../config-server/

#spring.cloud.config.server.monitor.github.enabled: true
spring.cloud.config.server.git:
  uri: https://github.com/nghialunhaiha/microservice-configserver.git
#  repos:
#    - patterns: dev
#      uri: https://github.com/nghialunhaiha/microservice-configserver.git
#    development:
#      pattern:
#        - '*/dev'
#      uri: https://github.com/nghialunhaiha/microservice-configserver.git


eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://nghia.ms:8761/eureka/

spring.rabbitmq:
  host: nghia.tool
  port: 5672

logging:
  level:
    root: WARN
    se.callista: INFO

    org.springframework.amqp.rabbit.listener.BlockingQueueConsumer: INFO
    org.apache.catalina.session.ManagerBase: INFO

    # Set INFO to see the allocated port
    org.springframework.boot.context.embedded.tomcat.TomcatEmbeddedServletContainer: INFO
    org.springframework.boot.context.embedded.undertow.UndertowEmbeddedServletContainer: INFO


---
# For deployment in Docker containers
spring:
  profiles: docker

spring.rabbitmq.host: rabbitmq

# when running docker locally on a dev pc the config-repo is mounted to a local git-repo in docker-compose file
spring.cloud.config.server.git.uri: /config-repo

eureka:
  instance:
    preferIpAddress: true
  client:
    serviceUrl:
      defaultZone: http://discovery:8761/eureka/

